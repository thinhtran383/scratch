<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Danh Sách Sản Phẩm</title>
    <!-- Bootstrap CSS + Icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    <style type="text/tailwindcss">
        @layer utilities {
            .btn-primary-tw {
                @apply bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-lg transition duration-200;
            }
            .btn-secondary-tw {
                @apply bg-gray-500 hover:bg-gray-600 text-white font-medium py-2 px-4 rounded-lg transition duration-200;
            }
            .btn-danger-tw {
                @apply bg-red-600 hover:bg-red-700 text-white font-medium py-2 px-4 rounded-lg transition duration-200;
            }
            .btn-warning-tw {
                @apply bg-yellow-500 hover:bg-yellow-600 text-white font-medium py-2 px-4 rounded-lg transition duration-200;
            }
        }
    </style>
</head>
<body class="bg-gray-50">
<div class="container mx-auto py-8 px-4 sm:px-6 lg:px-8 max-w-7xl">
    <div class="flex flex-col sm:flex-row justify-between items-center mb-6 gap-4">
        <h1 class="text-3xl font-bold text-gray-800 mb-2 sm:mb-0">Danh Sách Sản Phẩm</h1>
        <a href="#" class="btn-primary-tw flex items-center gap-2 shadow-md" data-bs-toggle="modal" data-bs-target="#addProductModal">
            <i class="bi bi-plus-lg"></i> Thêm Sản Phẩm
        </a>
    </div>

    <!-- Search Form -->
    <div class="bg-white p-4 rounded-lg shadow-md mb-6">
        <form class="flex flex-col sm:flex-row gap-3" method="GET" action="/products">
            <input
                    class="flex-grow form-control form-control-sm border border-gray-300 rounded-lg px-3 py-1 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200"
                    type="search"
                    name="search"
                    placeholder="Tìm kiếm theo tên, mã, danh mục hoặc số lượng..."
                    value="<%= search %>"
            >
            <button class="btn btn-sm btn-outline-success hover:bg-green-600 hover:text-white transition duration-200 shadow-sm" type="submit">
                <i class="bi bi-search mr-1"></i> Tìm Kiếm
            </button>
        </form>
    </div>

    <div class="bg-white rounded-lg shadow-md overflow-hidden">
        <table class="table table-hover align-middle w-full mb-0">
            <thead class="bg-gray-800 text-white">
            <tr>
                <th class="py-3 px-4 font-semibold">#</th>
                <th class="py-3 px-4 font-semibold">Mã sản phẩm</th>
                <th class="py-3 px-4 font-semibold">Tên sản phẩm</th>
                <th class="py-3 px-4 font-semibold">Số lượng</th>
                <th class="py-3 px-4 font-semibold">Danh mục</th>
                <th class="py-3 px-4 font-semibold">Giá (₫)</th>
                <th class="py-3 px-4 font-semibold text-center">Thao tác</th>
            </tr>
            </thead>
            <tbody class="divide-y divide-gray-200">
            <% products.forEach((product, idx) => { %>
                <tr class="hover:bg-gray-50 transition duration-150">
                    <th scope="row" class="py-3 px-4 font-medium"><%= idx + 1 %></th>
                    <td class="py-3 px-4 font-medium text-gray-600"><%= product.code %></td>
                    <td class="py-3 px-4"><%= product.name %></td>
                    <td class="py-3 px-4"><%= product.quantity %></td>
                    <td class="py-3 px-4"><span class="px-2 py-1 bg-blue-100 text-blue-800 rounded-full text-xs font-medium"><%= product.category %></span></td>
                    <td class="py-3 px-4 font-medium"><%= parseFloat(product.price).toFixed(2) %></td>
                    <td class="py-3 px-4 text-center">
                        <div class="flex justify-center gap-2">
                            <button type="button"
                                    class="btn-warning-tw text-sm py-1.5 px-3 flex items-center gap-1 btn-edit"
                                    data-id="<%= product.id %>"
                                    data-name="<%= product.name %>"
                                    data-code="<%= product.code %>"
                                    data-quantity="<%= product.quantity %>"
                                    data-category="<%= product.category %>"
                                    data-price="<%= product.price %>">
                                <i class="bi bi-pencil-square"></i> Sửa
                            </button>
                            <button type="button"
                                    class="btn-danger-tw text-sm py-1.5 px-3 flex items-center gap-1 btn-delete"
                                    data-id="<%= product.id %>"
                                    data-name="<%= product.name %>">
                                <i class="bi bi-trash"></i> Xóa
                            </button>
                        </div>
                    </td>
                </tr>
            <% }) %>
            </tbody>
        </table>
    </div>
</div>

<!-- Modal Edit Product -->
<div class="modal fade" id="editProductModal" tabindex="-1" aria-labelledby="editProductModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow-lg rounded-lg overflow-hidden">
            <div class="modal-header bg-gray-50 border-b border-gray-200">
                <h5 class="modal-title text-gray-800 font-bold" id="editProductModalLabel">Sửa Sản Phẩm</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="editProductForm">
                <div class="modal-body p-4">
                    <div class="mb-4">
                        <label for="editCode" class="block text-sm font-medium text-gray-700 mb-1">Mã sản phẩm</label>
                        <input type="text" class="form-control bg-gray-100 border border-gray-300 rounded-lg" id="editCode" disabled>
                    </div>

                    <div class="mb-4">
                        <label for="editName" class="block text-sm font-medium text-gray-700 mb-1">Tên sản phẩm</label>
                        <input type="text" class="form-control border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200" id="editName" required>
                    </div>

                    <div class="mb-4">
                        <label for="editQuantity" class="block text-sm font-medium text-gray-700 mb-1">Số lượng</label>
                        <input type="number" class="form-control border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200" id="editQuantity" required>
                    </div>
                    <div class="mb-4">
                        <label for="editCategory" class="block text-sm font-medium text-gray-700 mb-1">Danh mục</label>
                        <input type="text" class="form-control border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200" id="editCategory" required>
                    </div>
                    <div class="mb-4">
                        <label for="editPrice" class="block text-sm font-medium text-gray-700 mb-1">Giá (₫)</label>
                        <input type="number" class="form-control border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200" id="editPrice" step="0.01" required>
                    </div>
                </div>
                <div class="modal-footer bg-gray-50 border-t border-gray-200">
                    <button type="button" class="btn-secondary-tw" data-bs-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn-primary-tw">Lưu Thay Đổi</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal Add New Product -->
<div class="modal fade" id="addProductModal" tabindex="-1" aria-labelledby="addProductModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow-lg rounded-lg overflow-hidden">
            <div class="modal-header bg-gray-50 border-b border-gray-200">
                <h5 class="modal-title text-gray-800 font-bold" id="addProductModalLabel">Thêm Sản Phẩm Mới</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="addProductForm">
                <div class="modal-body p-4">
                    <div class="mb-4">
                        <label for="addCode" class="block text-sm font-medium text-gray-700 mb-1">Mã sản phẩm</label>
                        <input type="text" class="form-control border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200" id="addCode" required>
                    </div>
                    <div class="mb-4">
                        <label for="addName" class="block text-sm font-medium text-gray-700 mb-1">Tên sản phẩm</label>
                        <input type="text" class="form-control border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200" id="addName" required>
                    </div>
                    <div class="mb-4">
                        <label for="addQuantity" class="block text-sm font-medium text-gray-700 mb-1">Số lượng</label>
                        <input type="number" class="form-control border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200" id="addQuantity" required>
                    </div>
                    <div class="mb-4">
                        <label for="addCategory" class="block text-sm font-medium text-gray-700 mb-1">Danh mục</label>
                        <input type="text" class="form-control border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200" id="addCategory" required>
                    </div>
                    <div class="mb-4">
                        <label for="addPrice" class="block text-sm font-medium text-gray-700 mb-1">Giá (₫)</label>
                        <input type="number" class="form-control border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200" id="addPrice" step="0.01" required>
                    </div>
                </div>
                <div class="modal-footer bg-gray-50 border-t border-gray-200">
                    <button type="button" class="btn-secondary-tw" data-bs-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn-primary-tw">Thêm Sản Phẩm</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal Delete Product -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow-lg rounded-lg overflow-hidden">
            <div class="modal-header bg-gray-50 border-b border-gray-200">
                <h5 class="modal-title text-gray-800 font-bold" id="confirmDeleteLabel">Xác Nhận Xóa</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4 text-gray-700">
                <div class="flex items-center gap-3">
                    <div class="flex-shrink-0 w-12 h-12 rounded-full bg-red-100 flex items-center justify-center">
                        <i class="bi bi-exclamation-triangle text-red-500 text-xl"></i>
                    </div>
                    <p class="text-lg">
                        Bạn có chắc chắn muốn xóa <strong id="modalProductName" class="font-semibold"></strong>?
                    </p>
                </div>
                <p class="mt-3 text-sm text-gray-500">Hành động này không thể hoàn tác.</p>
            </div>
            <div class="modal-footer bg-gray-50 border-t border-gray-200">
                <button type="button" class="btn-secondary-tw" data-bs-dismiss="modal">Hủy</button>
                <button type="button" id="confirmDeleteBtn" class="btn-danger-tw">Xóa</button>
            </div>
        </div>
    </div>
</div>

<!-- Custom Toast Notification -->
<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
    <div id="customToast" class="toast hide" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto" id="toastTitle">Notification</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body" id="toastMessage"></div>
    </div>
</div>

<!-- Bootstrap JS Bundle -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<!-- Custom Toast Function -->
<script>
    function showToast(message, type = 'info') {
        const toast = document.getElementById('customToast');
        const toastTitle = document.getElementById('toastTitle');
        const toastMessage = document.getElementById('toastMessage');
        const bsToast = new bootstrap.Toast(toast);

        // Set message
        toastMessage.textContent = message;

        // Remove previous classes
        toast.classList.remove('bg-success', 'bg-danger', 'bg-warning', 'bg-info', 'text-white');
        toastTitle.classList.remove('text-white');

        // Set type
        switch(type) {
            case 'success':
                toast.classList.add('bg-success', 'text-white');
                toastTitle.textContent = 'Thành công';
                toastTitle.classList.add('text-white');
                break;
            case 'error':
                toast.classList.add('bg-danger', 'text-white');
                toastTitle.textContent = 'Lỗi';
                toastTitle.classList.add('text-white');
                break;
            case 'warning':
                toast.classList.add('bg-warning');
                toastTitle.textContent = 'Cảnh báo';
                break;
            default:
                toast.classList.add('bg-info', 'text-white');
                toastTitle.textContent = 'Thông báo';
                toastTitle.classList.add('text-white');
        }

        // Show toast
        bsToast.show();
    }
</script>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const editModalEl = document.getElementById('editProductModal');
        const editModal = new bootstrap.Modal(editModalEl);
        const editForm = document.getElementById('editProductForm');
        const editName = document.getElementById('editName');
        const editCode = document.getElementById('editCode');
        const editQuantity = document.getElementById('editQuantity');
        const editCategory = document.getElementById('editCategory');
        const editPrice = document.getElementById('editPrice');

        const isValidNumber = (value) => /^[0-9]+$/.test(value);
        const isValidPrice = (value) => /^\d+(\.\d{1,2})?$/.test(value);

        document.querySelectorAll('.btn-edit').forEach(btn => {
            btn.addEventListener('click', () => {
                const id = btn.dataset.id;
                editName.value = btn.dataset.name;
                editCode.value = btn.dataset.code;
                editQuantity.value = btn.dataset.quantity;
                editCategory.value = btn.dataset.category;
                editPrice.value = btn.dataset.price;

                editForm.onsubmit = (event) => {
                    event.preventDefault();

                    if (!isValidNumber(editQuantity.value)) {
                        showToast('Số lượng phải là số nguyên dương hợp lệ!', 'warning');
                        return;
                    }
                    if (!isValidPrice(editPrice.value)) {
                        showToast('Giá phải là số dương hợp lệ!', 'warning');
                        return;
                    }

                    const updatedProduct = {
                        id,
                        name: editName.value,
                        code: editCode.value,
                        quantity: editQuantity.value,
                        category: editCategory.value,
                        price: editPrice.value
                    };

                    fetch(`/products/update/${id}`, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(updatedProduct)
                    })
                        .then(response => response.json())
                        .then(() => {
                            showToast('Cập nhật sản phẩm thành công!', 'success');
                            setTimeout(() => location.reload(), 1500);
                        })
                        .catch(err => {
                            console.error('Lỗi cập nhật sản phẩm:', err);
                            showToast('Lỗi cập nhật sản phẩm!', 'error');
                        });

                    editModal.hide();
                };

                editModal.show();
            });
        });

        const deleteModalEl = document.getElementById('confirmDeleteModal');
        const deleteModal = new bootstrap.Modal(deleteModalEl);
        const modalProductName = deleteModalEl.querySelector('#modalProductName');
        const confirmDeleteBtn = deleteModalEl.querySelector('#confirmDeleteBtn');

        document.querySelectorAll('.btn-delete').forEach(btn => {
            btn.addEventListener('click', () => {
                const id = btn.dataset.id;
                modalProductName.textContent = btn.dataset.name;
                confirmDeleteBtn.onclick = () => window.location.href = `/products/delete/${id}`;
                deleteModal.show();
            });
        });
    });
</script>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const addModalEl = document.getElementById('addProductModal');
        const addModal = new bootstrap.Modal(addModalEl);
        const addForm = document.getElementById('addProductForm');
        const addName = document.getElementById('addName');
        const addCode = document.getElementById('addCode');
        const addQuantity = document.getElementById('addQuantity');
        const addCategory = document.getElementById('addCategory');
        const addPrice = document.getElementById('addPrice');

        const isValidNumber = (value) => /^[0-9]+$/.test(value);
        const isValidPrice = (value) => /^\d+(\.\d{1,2})?$/.test(value);

        addForm.onsubmit = (event) => {
            event.preventDefault();

            if (!isValidNumber(addQuantity.value)) {
                showToast('Số lượng phải là số nguyên dương hợp lệ!', 'warning');
                return;
            }
            if (!isValidPrice(addPrice.value)) {
                showToast('Giá phải là số dương hợp lệ!', 'warning');
                return;
            }


            // check existing product code offline not call api
            const existingProductCodes = [...document.querySelectorAll('tbody tr td:nth-child(3)')].map(td => td.textContent);
            if (existingProductCodes.includes(addCode.value)) {
                showToast('Mã sản phẩm đã tồn tại!', 'error');
                return;
            }

            const newProduct = {
                name: addName.value,
                code: addCode.value,
                quantity: addQuantity.value,
                category: addCategory.value,
                price: addPrice.value
            };

            fetch('/products/create', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(newProduct)
            })
                .then(response => response.json())
                .then(() => {
                    showToast('Thêm sản phẩm thành công!', 'success');
                    setTimeout(() => location.reload(), 1500);
                })
                .catch(err => {
                    console.error('Lỗi thêm sản phẩm:', err);
                    showToast('Lỗi thêm sản phẩm!', 'error');
                });

            addModal.hide();
        };
    });
</script>
</body>
</html>
