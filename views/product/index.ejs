<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Product List</title>
    <!-- Bootstrap CSS + Icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
</head>
<body>
<div class="container py-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3">Product List</h1>
        <a href="#" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addProductModal">
            <i class="bi bi-plus-lg"></i> Add New Product
        </a>
    </div>

    <!-- Search Form -->
    <form class="d-flex mb-4" method="GET" action="/products">
        <input
                class="form-control me-2"
                type="search"
                name="search"
                placeholder="Search by name, code, category or quantity..."
                value="<%= search %>"
        >
        <button class="btn btn-outline-success" type="submit">
            <i class="bi bi-search"></i> Search
        </button>
    </form>

    <table class="table table-striped table-hover align-middle">
        <thead class="table-dark">
        <tr>
            <th>#</th>
            <th>Name</th>
            <th>Code</th>
            <th>Quantity</th>
            <th>Category</th>
            <th>Price ($)</th>
            <th class="text-center">Actions</th>
        </tr>
        </thead>
        <tbody>
        <% products.forEach((product, idx) => { %>
            <tr>
                <th scope="row"><%= idx + 1 %></th>
                <td><%= product.name %></td>
                <td><%= product.code %></td>
                <td><%= product.quantity %></td>
                <td><%= product.category %></td>
                <td><%= parseFloat(product.price).toFixed(2) %></td>
                <td class="text-center">
                    <button type="button"
                            class="btn btn-sm btn-warning btn-edit"
                            data-id="<%= product.id %>"
                            data-name="<%= product.name %>"
                            data-code="<%= product.code %>"
                            data-quantity="<%= product.quantity %>"
                            data-category="<%= product.category %>"
                            data-price="<%= product.price %>">
                        <i class="bi bi-pencil-square"></i> Edit
                    </button>
                    <button type="button"
                            class="btn btn-sm btn-danger btn-delete"
                            data-id="<%= product.id %>"
                            data-name="<%= product.name %>">
                        <i class="bi bi-trash"></i> Delete
                    </button>
                </td>
            </tr>
        <% }) %>
        </tbody>
    </table>
</div>

<!-- Modal Edit Product -->
<div class="modal fade" id="editProductModal" tabindex="-1" aria-labelledby="editProductModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editProductModalLabel">Edit Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="editProductForm">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="editName" class="form-label">Product Name</label>
                        <input type="text" class="form-control" id="editName" required>
                    </div>
                    <div class="mb-3">
                        <label for="editCode" class="form-label">Product Code</label>
                        <input type="text" class="form-control" id="editCode" disabled>
                    </div>
                    <div class="mb-3">
                        <label for="editQuantity" class="form-label">Quantity</label>
                        <input type="number" class="form-control" id="editQuantity" required>
                    </div>
                    <div class="mb-3">
                        <label for="editCategory" class="form-label">Category</label>
                        <input type="text" class="form-control" id="editCategory" required>
                    </div>
                    <div class="mb-3">
                        <label for="editPrice" class="form-label">Price ($)</label>
                        <input type="number" class="form-control" id="editPrice" step="0.01" required>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal Add New Product -->
<div class="modal fade" id="addProductModal" tabindex="-1" aria-labelledby="addProductModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addProductModalLabel">Add New Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="addProductForm">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="addName" class="form-label">Product Name</label>
                        <input type="text" class="form-control" id="addName" required>
                    </div>
                    <div class="mb-3">
                        <label for="addCode" class="form-label">Product Code</label>
                        <input type="text" class="form-control" id="addCode" required>
                    </div>
                    <div class="mb-3">
                        <label for="addQuantity" class="form-label">Quantity</label>
                        <input type="number" class="form-control" id="addQuantity" required>
                    </div>
                    <div class="mb-3">
                        <label for="addCategory" class="form-label">Category</label>
                        <input type="text" class="form-control" id="addCategory" required>
                    </div>
                    <div class="mb-3">
                        <label for="addPrice" class="form-label">Price ($)</label>
                        <input type="number" class="form-control" id="addPrice" step="0.01" required>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Add Product</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal Delete Product -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete <strong id="modalProductName"></strong>?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" id="confirmDeleteBtn" class="btn btn-danger">Delete</button>
            </div>
        </div>
    </div>
</div>

<!-- Bootstrap JS Bundle -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const editModalEl = document.getElementById('editProductModal');
        const editModal = new bootstrap.Modal(editModalEl);
        const editForm = document.getElementById('editProductForm');
        const editName = document.getElementById('editName');
        const editCode = document.getElementById('editCode');
        const editQuantity = document.getElementById('editQuantity');
        const editCategory = document.getElementById('editCategory');
        const editPrice = document.getElementById('editPrice');

        const isValidNumber = (value) => /^[0-9]+$/.test(value);
        const isValidPrice = (value) => /^\d+(\.\d{1,2})?$/.test(value);

        document.querySelectorAll('.btn-edit').forEach(btn => {
            btn.addEventListener('click', () => {
                const id = btn.dataset.id;
                editName.value = btn.dataset.name;
                editCode.value = btn.dataset.code;
                editQuantity.value = btn.dataset.quantity;
                editCategory.value = btn.dataset.category;
                editPrice.value = btn.dataset.price;

                editForm.onsubmit = (event) => {
                    event.preventDefault();

                    if (!isValidNumber(editQuantity.value)) {
                        alert('Quantity must be a valid positive integer!');
                        return;
                    }
                    if (!isValidPrice(editPrice.value)) {
                        alert('Price must be a valid positive number!');
                        return;
                    }

                    const updatedProduct = {
                        id,
                        name: editName.value,
                        code: editCode.value,
                        quantity: editQuantity.value,
                        category: editCategory.value,
                        price: editPrice.value
                    };

                    fetch(`/products/update/${id}`, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(updatedProduct)
                    })
                        .then(response => response.json())
                        .then(() => {
                            alert('Product updated successfully!');
                            location.reload();
                        })
                        .catch(err => console.error('Error updating product:', err));

                    editModal.hide();
                };

                editModal.show();
            });
        });

        const deleteModalEl = document.getElementById('confirmDeleteModal');
        const deleteModal = new bootstrap.Modal(deleteModalEl);
        const modalProductName = deleteModalEl.querySelector('#modalProductName');
        const confirmDeleteBtn = deleteModalEl.querySelector('#confirmDeleteBtn');

        document.querySelectorAll('.btn-delete').forEach(btn => {
            btn.addEventListener('click', () => {
                const id = btn.dataset.id;
                modalProductName.textContent = btn.dataset.name;
                confirmDeleteBtn.onclick = () => window.location.href = `/products/delete/${id}`;
                deleteModal.show();
            });
        });
    });
</script>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const addModalEl = document.getElementById('addProductModal');
        const addModal = new bootstrap.Modal(addModalEl);
        const addForm = document.getElementById('addProductForm');
        const addName = document.getElementById('addName');
        const addCode = document.getElementById('addCode');
        const addQuantity = document.getElementById('addQuantity');
        const addCategory = document.getElementById('addCategory');
        const addPrice = document.getElementById('addPrice');

        const isValidNumber = (value) => /^[0-9]+$/.test(value);
        const isValidPrice = (value) => /^\d+(\.\d{1,2})?$/.test(value);

        addForm.onsubmit = (event) => {
            event.preventDefault();

            if (!isValidNumber(addQuantity.value)) {
                alert('Quantity must be a valid positive integer!');
                return;
            }
            if (!isValidPrice(addPrice.value)) {
                alert('Price must be a valid positive number!');
                return;
            }


            // check existing product code offline not call api
            const existingProductCodes = [...document.querySelectorAll('tbody tr td:nth-child(3)')].map(td => td.textContent);
            if (existingProductCodes.includes(addCode.value)) {
                alert('Product code already exists!');
                return;
            }

            const newProduct = {
                name: addName.value,
                code: addCode.value,
                quantity: addQuantity.value,
                category: addCategory.value,
                price: addPrice.value
            };

            fetch('/products/create', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(newProduct)
            })
                .then(response => response.json())
                .then(() => {
                    alert('Product added successfully!');
                    location.reload();
                })
                .catch(err => console.error('Error adding product:', err));

            addModal.hide();
        };
    });
</script>
</body>
</html>
